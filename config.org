* Installation
Clone into the =.emacs.d= folder created by Emacs
#+BEGIN_SRC 
git clone https://github.com/blemberger-b/emacs-config.git ~/.emacs.d
#+END_SRC

* Keybindings
*** Remap Mac Fn key to super key =(s- )=
Doesn't work in tty mode, must use =C-x @ s= and then the key.
#+BEGIN_SRC emacs-lisp
  (setq mac-function-modifier 'super)
#+END_SRC

*** Bind ansi-term command to =s-t=
Doesn't work in tty mode, must use =C-x @ s t=.
#+BEGIN_SRC emacs-lisp
  (global-set-key (kbd "s-t") 'ansi-term)
#+END_SRC

*** Fix some stupid failed binding to =backtab= key in Mac OS console mode
See https://stackoverflow.com/questions/3518846/shift-tab-produces-cryptic-error-in-emacs.
#+BEGIN_SRC emacs-lisp
  (add-hook 'term-setup-hook
	    (lambda () (define-key input-decode-map "\e[Z" [backtab])))
#+END_SRC

* Installed Packages
These packages are installed via =use-package=
*** Add =which-keys= package
#+BEGIN_SRC emacs-lisp
  (use-package which-key
    :ensure t
    :init (which-key-mode))
  ;; BSL - 
  ;;   requires 'markdown' command installed (e.g. by Homebrew)
#+END_SRC

*** Install & use =markdown-mode= (from MELPA)
#+BEGIN_SRC emacs-lisp
    (use-package markdown-mode
      :ensure t
      :commands (markdown-mode gfm-mode)
      :mode (("README\\.md\\'" . gfm-mode)
	     ("\\.md\\'" . markdown-mode)
	     ("\\.markdown\\'" . markdown-mode))
      :init (setq markdown-command "/usr/local/bin/markdown"))
#+END_SRC
*** Install & use =ido-vertical-mode=
#+BEGIN_SRC emacs-lisp
  (use-package ido-vertical-mode
    :ensure t
    :init (setq ido-vertical-define-keys 'C-n-and-C-p-only)
	  (ido-vertical-mode 1))
#+END_SRC
*** Install & use =smex= (from MELPA)
#+BEGIN_SRC emacs-lisp
   (use-package smex
     :ensure t
     :init (smex-initialize)
     :bind
     ("M-x" . smex))
#+END_SRC
* UI Customizations
*** Set geometry of all emacs frames
Top-left corner of initial frame will be 50 pixels down from the top margin and 250 pixels right from the left margin
#+BEGIN_SRC emacs-lisp
(setq default-frame-alist '((top . 50) (left . 250) (width . 112) (height . 45)))
#+END_SRC
*** Turn off graphical tool-bar
#+BEGIN_SRC emacs-lisp
  (tool-bar-mode -1)
#+END_SRC

*** Turn off right scroll-bar
#+BEGIN_SRC emacs-lisp
  (scroll-bar-mode -1)
#+END_SRC

*** Turn off top menu bar
#+BEGIN_SRC emacs-lisp
  (menu-bar-mode -1)
#+END_SRC

*** Turn on line numbering in all buffers that support it
#+BEGIN_SRC emacs-lisp
  (global-display-line-numbers-mode)
#+END_SRC

*** Turn on parenthesis matching mode
#+BEGIN_SRC emacs-lisp
  (show-paren-mode 1)
#+END_SRC

*** Turn on line highlight mode only in GUI mode
#+BEGIN_SRC emacs-lisp
  (when window-system (global-hl-line-mode))
#+END_SRC

* Terminal
*** Make bash the default shell for ansi-term
#+BEGIN_SRC emacs-lisp
  (defvar my-term-shell "/bin/bash")
  (defadvice ansi-term (before force-bash)
    (interactive (list my-term-shell)))
  (ad-activate 'ansi-term)
#+END_SRC

* Global Variables
*** Turn off emacs start screen
#+BEGIN_SRC emacs-lisp
  (setq inhibit-startup-message t)
#+END_SRC

*** Turn off aggressive vertical scrolling
#+BEGIN_SRC  emacs-lisp
  (setq scroll-conservatively 100)
#+END_SRC

*** Turn off annoying bell
#+BEGIN_SRC emacs-lisp
  (setq ring-bell-function 'ignore)
#+END_SRC

*** Turn off auto-saving
#+BEGIN_SRC emacs-lisp
  (setq auto-save-default nil)
#+END_SRC

*** Turn off stupid auto-backups
#+BEGIN_SRC emacs-lisp
  (setq make-backup-files nil)
#+END_SRC

* Yes/No Prompt
*** Replace 'yes-or-no' prompts everywhere with 'y-or-n' prompts
#+BEGIN_SRC emacs-lisp
  (defalias 'yes-or-no-p 'y-or-n-p)
#+END_SRC
* IDO Mode
*** Set some default preferences
#+BEGIN_SRC emacs-lisp
  (setq ido-enable-flex-matching nil)
  (setq ido-create-new-buffer 'always)
  (setq ido-everywhere t)
#+END_SRC
*** Enable =ido-mode=
#+BEGIN_SRC emacs-lisp
  (ido-mode 1)
#+END_SRC
